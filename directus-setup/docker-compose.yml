version: '3.8'

services:
  # --- Directus (deine App) ---
  directus:
    build:
      context: .  # <-- DIESE ZEILE WURDE HINZUGEFÜGT. Sie fehlte.
      dockerfile: Dockerfile
    container_name: projectnoor-directus
    restart: always
    ports:
      - "8055:8055" # Port 8055 der VM wird auf Port 8055 des Containers gemappt
    volumes:
      - ./data:/app/data 
      - ./uploads:/app/uploads
      - ./extensions:/app/extensions
    depends_on:
      - db # Hängt jetzt vom 'db'-Service ab, nicht mehr vom Proxy
    networks:
      - projectnoor-netzwerk
    environment:
      # --- SCHLÜSSEL (unverändert) ---
      KEY: "a-very-random-and-long-key" # Ändere dies zu etwas Eigenem!
      SECRET: "another-very-random-and-long-secret" # Ändere dies auch!

      # --- DATENBANK-KONFIGURATION (Angepasst für den Docker-DB-Container) ---
      DB_CLIENT: "pg"
      DB_HOST: "db" # <-- WICHTIG: Zeigt jetzt auf den Service-Namen 'db'
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "Frikadell3"
      DB_DATABASE: "directus"

      # --- ADMIN-ZUGANG (unverändert) ---
      ADMIN_EMAIL: "admin@project-noor.eu"
      ADMIN_PASSWORD: "Frikadell3"
      
      # --- PUBLIC_URL (WICHTIG!) ---
      # Setze hier die öffentliche IP deiner Oracle VM ein
      PUBLIC_URL: "http://129.159.199.103:8055" 

  # --- Neue PostgreSQL-Datenbank als Container ---
  db:
    image: postgres:15-alpine # Ein schlankes Postgres-Image
    container_name: projectnoor-db
    restart: always
    networks:
      - projectnoor-netzwerk
    environment:
      # Diese Zugangsdaten müssen mit den DB_... Variablen von directus übereinstimmen
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Frikadell3"
      POSTGRES_DB: "directus"
    volumes:
      # Sorgt dafür, dass die Datenbankdaten auf der VM gespeichert bleiben (persistent)
      - postgres_data:/var/lib/postgresql/data
    # Du brauchst die Ports der DB nicht nach außen freigeben,
    # da die Container direkt über das Docker-Netzwerk sprechen.

# --- Docker Volumes und Netzwerke definieren ---
volumes:
  postgres_data: # Hier werden die DB-Daten gespeichert

networks:
  projectnoor-netzwerk:
    driver: bridge